Docker_Volumes
                                      ---------------

1) Docker_Volumes
2) Bind Mounts


---------------------------------

 docker ps 
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES
root@ip-192-40-2-38:/home/ubuntu# docker network ls
NETWORK ID     NAME      DRIVER    SCOPE
26d506953d10   bridge    bridge    local
14a4b2bb3a47   host      host      local
440b7dfbf473   none      null      local
bd49b2c99bcb   test1     bridge    local
df479525b675   ts1       bridge    local
root@ip-192-40-2-38:/home/ubuntu# docker volume ls
DRIVER    VOLUME NAME
local     test1
root@ip-192-40-2-38:/home/ubuntu# docker version
Client: Docker Engine - Community
 Version:           28.0.1
 API version:       1.48
 Go version:        go1.23.6
 Git commit:        068a01e
 Built:             Wed Feb 26 10:41:12 2025
 OS/Arch:           linux/amd64
 Context:           default

Server: Docker Engine - Community
 Engine:
  Version:          28.0.1
  API version:      1.48 (minimum version 1.24)
  Go version:       go1.23.6
  Git commit:       bbd0a17
  Built:            Wed Feb 26 10:41:12 2025
  OS/Arch:          linux/amd64
  Experimental:     false
 containerd:
  Version:          1.7.25
  GitCommit:        bcc810d6b9066471b0b6fa75f557a15a1cbf31bb
 runc:
  Version:          1.2.4
  GitCommit:        v1.2.4-0-g6c52b3f
 docker-init:
  Version:          0.19.0
  GitCommit:        de40ad0
root@ip-192-40-2-38:/home/ubuntu# docker run --rm -dit sreeharshav/utils
96a32ad52d2a22d5740f6cd79f0ae3da2596766dc0c41e10626a7565bd54f8cd
root@ip-192-40-2-38:/home/ubuntu# docker ps
CONTAINER ID   IMAGE               COMMAND                  CREATED         STATUS         PORTS      NAMES
96a32ad52d2a   sreeharshav/utils   "nginx -g 'daemon of…"   5 seconds ago   Up 4 seconds   8888/tcp   infallible_colden
root@ip-192-40-2-38:/home/ubuntu# docker ps -a
CONTAINER ID   IMAGE               COMMAND                  CREATED          STATUS          PORTS      NAMES
96a32ad52d2a   sreeharshav/utils   "nginx -g 'daemon of…"   12 seconds ago   Up 11 seconds   8888/tcp   infallible_colden
root@ip-192-40-2-38:/home/ubuntu# docker exec -it nfallible_colden bash
Error response from daemon: No such container: nfallible_colden
root@ip-192-40-2-38:/home/ubuntu# docker exec -it infallible_colden bash
root@96a32ad52d2a:/# mkdir testfolder1
root@96a32ad52d2a:/# cd testfolder1
root@96a32ad52d2a:/testfolder1# for i in {1..10}
> do
> echo $(date) > file$i
> sleep 1
> done 
root@96a32ad52d2a:/testfolder1# ls
file1  file10  file2  file3  file4  file5  file6  file7  file8  file9
root@96a32ad52d2a:/testfolder1# 


-------------------------------------------

# docker ps 
CONTAINER ID   IMAGE               COMMAND                  CREATED         STATUS         PORTS      NAMES
96a32ad52d2a   sreeharshav/utils   "nginx -g 'daemon of…"   5 minutes ago   Up 5 minutes   8888/tcp   infallible_colden
root@ip-192-40-2-38:/home/ubuntu# docker stop 96a32ad52d2a
96a32ad52d2a
root@ip-192-40-2-38:/home/ubuntu# docker ps
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES
root@ip-192-40-2-38:/home/ubuntu# 


 ** if can stop the container to remove the container volumes, files,data 
    then we can use the docker volumes if can delete the container are volumes present in the server



-------- create volumes -------------------


# docker volume ls
DRIVER    VOLUME NAME
local     test1
root@ip-192-40-2-38:/home/ubuntu# docker volume create test2
test2
root@ip-192-40-2-38:/home/ubuntu# docker volume create test3
test3
root@ip-192-40-2-38:/home/ubuntu# docker volumes ls
docker: unknown command: docker volumes

Run 'docker --help' for more information
root@ip-192-40-2-38:/home/ubuntu# docker volume ls
DRIVER    VOLUME NAME
local     test1
local     test2
local     test3
root@ip-192-40-2-38:/home/ubuntu# cd /var/lib/docker/volumes
root@ip-192-40-2-38:/var/lib/docker/volumes# ls
backingFsBlockDev  metadata.db  test1  test2  test3
root@ip-192-40-2-38:/var/lib/docker/volumes# 


--------------- moount the volumes to container -----------------------


 docker run --rm -dit -v test1:/myapp sreeharshav/utils
98aeb1eb4e0e17d469fa58259edbf49741b4f8c14d4e7da76ea42fd3004fd80c
root@ip-192-40-2-38:/var/lib/docker/volumes# docker ps
CONTAINER ID   IMAGE               COMMAND                  CREATED         STATUS         PORTS      NAMES
98aeb1eb4e0e   sreeharshav/utils   "nginx -g 'daemon of…"   5 seconds ago   Up 4 seconds   8888/tcp   peaceful_beaver
root@ip-192-40-2-38:/var/lib/docker/volumes# docker inspect peaceful_beaver
[
---------------------------create 10 file in container by using shell ------------

 mkdir testfolder1
root@96a32ad52d2a:/# cd testfolder1
root@96a32ad52d2a:/testfolder1# for i in {1..10}
> do
> echo $(date) > file$i
> sleep 1
> done 
root@96a32ad52d2a:/testfolder1# ls
file1  file10  file2  file3  file4  file5  file6  file7  file8  file9
root@96a32ad52d2a:/testfolder1# exit 
exit




---------------------------- container stop will be volumes are present in server---------------------------
 docker ps 
CONTAINER ID   IMAGE               COMMAND                  CREATED         STATUS         PORTS      NAMES
98aeb1eb4e0e   sreeharshav/utils   "nginx -g 'daemon of…"   9 minutes ago   Up 9 minutes   8888/tcp   peaceful_beaver
root@ip-192-40-2-38:/home/ubuntu# docker stop peaceful_beaver
peaceful_beaver
root@ip-192-40-2-38:/home/ubuntu# docker ps 
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES
root@ip-192-40-2-38:/home/ubuntu# docker ps -a
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES
root@ip-192-40-2-38:/home/ubuntu# cd /var/lib/docker/volumes
root@ip-192-40-2-38:/var/lib/docker/volumes# ls
backingFsBlockDev  metadata.db  test1  test2  test3
root@ip-192-40-2-38:/var/lib/docker/volumes# cd test1
root@ip-192-40-2-38:/var/lib/docker/volumes/test1# ls
_data
root@ip-192-40-2-38:/var/lib/docker/volumes/test1# cd _data
root@ip-192-40-2-38:/var/lib/docker/volumes/test1/_data# ls
File1  File10  File2  File3  File4  File5  File6  File7  File8  File9
root@ip-192-40-2-38:/var/lib/docker/volumes/test1/_data# 

--------------------- mount the volumes other new container -------------------------

 docker run --rm -dit -v test1:/myapp sreeharshav/utils
4e9b182f3ea6cb4ad979708e3b57524a17434a6ed6292cbb29ee4d6a3ecf2046
root@ip-192-40-2-38:/home/ubuntu# docker ls
docker: unknown command: docker ls

Run 'docker --help' for more information
root@ip-192-40-2-38:/home/ubuntu# docker ps
CONTAINER ID   IMAGE               COMMAND                  CREATED          STATUS          PORTS      NAMES
4e9b182f3ea6   sreeharshav/utils   "nginx -g 'daemon of…"   14 seconds ago   Up 13 seconds   8888/tcp   strange_agnesi
root@ip-192-40-2-38:/home/ubuntu# docker exec -it strange_agnesi bash
root@4e9b182f3ea6:/# ls
app.py  aws  awscliv2.zip  bin  boot  crictl-v1.25.0-linux-amd64.tar.gz  dev  etc  home  lib  lib64  media  mnt  myapp  opt  proc  root  run  sbin  srv  sys  tmp  usr  var
root@4e9b182f3ea6:/# cd myapp
root@4e9b182f3ea6:/myapp# ls
File1  File10  File2  File3  File4  File5  File6  File7  File8  File9
root@4e9b182f3ea6:/myapp# 

------------------------------------------------- Mysql docker container ------------------------------

- docker run --rm -dit --name mysql mysql/mysql-server:latest 

- docker logs mysql 

- password for mysql  
 6_NmAc:?+B#35duMt9e1j.4z^A6*8qoI

 ---  connect the mysql ----------


 docker exec -it mysql bash
bash-4.4# mysql 
ERROR 1045 (28000): Access denied for user 'root'@'localhost' (using password: NO)
bash-4.4# mysql -u root -p
Enter password: 
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 16
Server version: 8.0.32

Copyright (c) 2000, 2023, Oracle and/or its affiliates.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql> 
--------------- set a new password --------------------


ALTER USER 'root'@'localhost' IDENTIFIED BY 'Ramesh321';
FLUSH PRIVILEGES;


-----------mysql data base for movies names--------------------


> FLUSH PRIVILEGES;
Query OK, 0 rows affected (0.01 sec)

mysql> -- Step 1: Create the database
mysql> CREATE DATABASE IF NOT EXISTS movies_db;
Query OK, 1 row affected (0.01 sec)

mysql> USE movies_db;
Database changed
mysql> 
mysql> -- Step 2: Create the movies table
mysql> CREATE TABLE movies (
    ->     id INT AUTO_INCREMENT PRIMARY KEY,
    ->     title VARCHAR(255) NOT NULL,
    ->     genre VARCHAR(100),
    ->     release_year INT,
    ->     director VARCHAR(255),
    ->     created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    -> );
Query OK, 0 rows affected (0.06 sec)

mysql> 
mysql> -- Step 3: Insert sample movie records
mysql> INSERT INTO movies (title, genre, release_year, director) VALUES
    -> ('Inception', 'Sci-Fi', 2010, 'Christopher Nolan'),
    -> ('The Dark Knight', 'Action', 2008, 'Christopher Nolan'),
    -> ('Interstellar', 'Sci-Fi', 2014, 'Christopher Nolan'),
    -> ('Pulp Fiction', 'Crime', 1994, 'Quentin Tarantino'),
    -> ('The Godfather', 'Crime', 1972, 'Francis Ford Coppola');
Query OK, 5 rows affected (0.02 sec)
Records: 5  Duplicates: 0  Warnings: 0

mysql> 
mysql> -- Step 4: Retrieve all movies
mysql> SELECT * FROM movies;
+----+-----------------+--------+--------------+----------------------+---------------------+
| id | title           | genre  | release_year | director             | created_at          |
+----+-----------------+--------+--------------+----------------------+---------------------+
|  1 | Inception       | Sci-Fi |         2010 | Christopher Nolan    | 2025-03-11 08:48:53 |
|  2 | The Dark Knight | Action |         2008 | Christopher Nolan    | 2025-03-11 08:48:53 |
|  3 | Interstellar    | Sci-Fi |         2014 | Christopher Nolan    | 2025-03-11 08:48:53 |
|  4 | Pulp Fiction    | Crime  |         1994 | Quentin Tarantino    | 2025-03-11 08:48:53 |
|  5 | The Godfather   | Crime  |         1972 | Francis Ford Coppola | 2025-03-11 08:48:53 |
+----+-----------------+--------+--------------+----------------------+---------------------+
5 rows in set (0.00 sec)

mysql> 


----------------show database -----

mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| movies_db          |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
5 rows in set (0.00 sec)

mysql> -------------

----------------stop mysql container mount the volume -----



default password 

1DiYSVY8=7,P9*QIcfaxF?+V=47*5F:9



--------------database -----------------

-- Step 1: Create the database
CREATE DATABASE IF NOT EXISTS movies_db;
USE movies_db;

-- Step 2: Create the movies table
CREATE TABLE movies (
    id INT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    genre VARCHAR(100),
    release_year INT,
    director VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Step 3: Insert sample movie records
INSERT INTO movies (title, genre, release_year, director) VALUES
('Inception', 'Sci-Fi', 2010, 'Christopher Nolan'),
('The Dark Knight', 'Action', 2008, 'Christopher Nolan'),
('Interstellar', 'Sci-Fi', 2014, 'Christopher Nolan'),
('Pulp Fiction', 'Crime', 1994, 'Quentin Tarantino'),
('The Godfather', 'Crime', 1972, 'Francis Ford Coppola');

-- Step 4: Retrieve all movies
SELECT * FROM movies;



-------------------------------place on database show the movies database in mysql container---------------

mysql> -- Step 1: Create the database
mysql> CREATE DATABASE IF NOT EXISTS movies_db;
Query OK, 1 row affected (0.01 sec)

mysql> USE movies_db;
Database changed
mysql> 
mysql> -- Step 2: Create the movies table
mysql> CREATE TABLE movies (
    ->     id INT AUTO_INCREMENT PRIMARY KEY,
    ->     title VARCHAR(255) NOT NULL,
    ->     genre VARCHAR(100),
    ->     release_year INT,
    ->     director VARCHAR(255),
    ->     created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    -> );
Query OK, 0 rows affected (0.04 sec)

mysql> 
mysql> -- Step 3: Insert sample movie records
mysql> INSERT INTO movies (title, genre, release_year, director) VALUES
    -> ('Inception', 'Sci-Fi', 2010, 'Christopher Nolan'),
    -> ('The Dark Knight', 'Action', 2008, 'Christopher Nolan'),
    -> ('Interstellar', 'Sci-Fi', 2014, 'Christopher Nolan'),
    -> ('Pulp Fiction', 'Crime', 1994, 'Quentin Tarantino'),
    -> ('The Godfather', 'Crime', 1972, 'Francis Ford Coppola');
Query OK, 5 rows affected (0.02 sec)
Records: 5  Duplicates: 0  Warnings: 0

mysql> 
mysql> -- Step 4: Retrieve all movies
mysql> SELECT * FROM movies;
+----+-----------------+--------+--------------+----------------------+---------------------+
| id | title           | genre  | release_year | director             | created_at          |
+----+-----------------+--------+--------------+----------------------+---------------------+
|  1 | Inception       | Sci-Fi |         2010 | Christopher Nolan    | 2025-03-11 09:06:19 |
|  2 | The Dark Knight | Action |         2008 | Christopher Nolan    | 2025-03-11 09:06:19 |
|  3 | Interstellar    | Sci-Fi |         2014 | Christopher Nolan    | 2025-03-11 09:06:19 |
|  4 | Pulp Fiction    | Crime  |         1994 | Quentin Tarantino    | 2025-03-11 09:06:19 |
|  5 | The Godfather   | Crime  |         1972 | Francis Ford Coppola | 2025-03-11 09:06:19 |
+----+-----------------+--------+--------------+----------------------+---------------------+
5 rows in set (0.00 sec)

mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| movies_db          |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
5 rows in set (0.00 sec)

mysql> use movies_db
Database changed
mysql> show tables;
+---------------------+
| Tables_in_movies_db |
+---------------------+
| movies              |
+---------------------+
1 row in set (0.00 sec)

mysql> select * from movies;
+----+-----------------+--------+--------------+----------------------+---------------------+
| id | title           | genre  | release_year | director             | created_at          |
+----+-----------------+--------+--------------+----------------------+---------------------+
|  1 | Inception       | Sci-Fi |         2010 | Christopher Nolan    | 2025-03-11 09:06:19 |
|  2 | The Dark Knight | Action |         2008 | Christopher Nolan    | 2025-03-11 09:06:19 |
|  3 | Interstellar    | Sci-Fi |         2014 | Christopher Nolan    | 2025-03-11 09:06:19 |
|  4 | Pulp Fiction    | Crime  |         1994 | Quentin Tarantino    | 2025-03-11 09:06:19 |
|  5 | The Godfather   | Crime  |         1972 | Francis Ford Coppola | 2025-03-11 09:06:19 |
+----+-----------------+--------+--------------+----------------------+---------------------+
5 rows in set (0.00 sec)

mysql> 


---

cDUKY=L8i*&2w.79ck=spm^r78=:zj14



-----------------------------------


# docker exec -it mysql bash 
bash-4.4# mysql -u root -p
Enter password: 
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 14
Server version: 8.0.32

Copyright (c) 2000, 2023, Oracle and/or its affiliates.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql> ALTER USER 'root'@'localhost' IDENTIFIED BY 'Ramesh321';
Query OK, 0 rows affected (0.01 sec)

mysql> FLUSH PRIVILEGES;
Query OK, 0 rows affected (0.01 sec)

mysql> -- Step 1: Create the database
mysql> CREATE DATABASE IF NOT EXISTS movies_db;
Query OK, 1 row affected (0.01 sec)

mysql> USE movies_db;
Database changed
mysql> 
mysql> -- Step 2: Create the movies table
mysql> CREATE TABLE movies (
    ->     id INT AUTO_INCREMENT PRIMARY KEY,
    ->     title VARCHAR(255) NOT NULL,
    ->     genre VARCHAR(100),
    ->     release_year INT,
    ->     director VARCHAR(255),
    ->     created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    -> );
Query OK, 0 rows affected (0.05 sec)

mysql> 
mysql> -- Step 3: Insert sample movie records
mysql> INSERT INTO movies (title, genre, release_year, director) VALUES
    -> ('Inception', 'Sci-Fi', 2010, 'Christopher Nolan'),
    -> ('The Dark Knight', 'Action', 2008, 'Christopher Nolan'),
    -> ('Interstellar', 'Sci-Fi', 2014, 'Christopher Nolan'),
    -> ('Pulp Fiction', 'Crime', 1994, 'Quentin Tarantino'),
    -> ('The Godfather', 'Crime', 1972, 'Francis Ford Coppola');
Query OK, 5 rows affected (0.01 sec)
Records: 5  Duplicates: 0  Warnings: 0

mysql> 
mysql> -- Step 4: Retrieve all movies
mysql> SELECT * FROM movies;
+----+-----------------+--------+--------------+----------------------+---------------------+
| id | title           | genre  | release_year | director             | created_at          |
+----+-----------------+--------+--------------+----------------------+---------------------+
|  1 | Inception       | Sci-Fi |         2010 | Christopher Nolan    | 2025-03-11 09:24:58 |
|  2 | The Dark Knight | Action |         2008 | Christopher Nolan    | 2025-03-11 09:24:58 |
|  3 | Interstellar    | Sci-Fi |         2014 | Christopher Nolan    | 2025-03-11 09:24:58 |
|  4 | Pulp Fiction    | Crime  |         1994 | Quentin Tarantino    | 2025-03-11 09:24:58 |
|  5 | The Godfather   | Crime  |         1972 | Francis Ford Coppola | 2025-03-11 09:24:58 |
+----+-----------------+--------+--------------+----------------------+---------------------+
5 rows in set (0.00 sec)

mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| movies_db          |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
5 rows in set (0.00 sec)

mysql> use movies_db
Database changed
mysql> show tables;
+---------------------+
| Tables_in_movies_db |
+---------------------+
| movies              |
+---------------------+
1 row in set (0.01 sec)

mysql> select * from movies
    -> ;
+----+-----------------+--------+--------------+----------------------+---------------------+
| id | title           | genre  | release_year | director             | created_at          |
+----+-----------------+--------+--------------+----------------------+---------------------+
|  1 | Inception       | Sci-Fi |         2010 | Christopher Nolan    | 2025-03-11 09:24:58 |
|  2 | The Dark Knight | Action |         2008 | Christopher Nolan    | 2025-03-11 09:24:58 |
|  3 | Interstellar    | Sci-Fi |         2014 | Christopher Nolan    | 2025-03-11 09:24:58 |
|  4 | Pulp Fiction    | Crime  |         1994 | Quentin Tarantino    | 2025-03-11 09:24:58 |
|  5 | The Godfather   | Crime  |         1972 | Francis Ford Coppola | 2025-03-11 09:24:58 |
+----+-----------------+--------+--------------+----------------------+---------------------+
5 rows in set (0.00 sec)

mysql> 



------------------------save the movies date base ---------------


/var/lib/docker/volumes/test3# cd _data
root@ip-192-40-2-38:/var/lib/docker/volumes/test3/_data# ls
'#ib_16384_0.dblwr'  '#innodb_redo'   9a123083c4b9.err   binlog.000001   binlog.index   ca.pem            client-key.pem   ibdata1   movies_db   mysql.ibd    mysql.sock.lock      private_key.pem   server-cert.pem   sys        undo_002
'#ib_16384_1.dblwr'  '#innodb_temp'   auto.cnf           binlog.000002   ca-key.pem     client-cert.pem   ib_buffer_pool   ibtmp1    mysql       mysql.sock   performance_schema   public_key.pem    server-key.pem    undo_001
root@ip-192-40-2-38:/var/lib/docker/volumes/test3/_data# cd movies_db
root@ip-192-40-2-38:/var/lib/docker/volumes/test3/_data/movies_db# ls
movies.ibd

------------------------------ docker app container ---------