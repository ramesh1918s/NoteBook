[5:36 PM, 3/18/2025] Urukundu Anna Muk: docker pull shivaram1918/netflix:latest
latest: Pulling from shivaram1918/netflix
43c4264eed91: Pull complete 
45a30f47e80f: Pull complete 
4c64d3291c88: Pull complete 
9dc0279166b1: Pull complete 
d3b17590914c: Pull complete 
50d6cfdb81c6: Pull complete 
6592d833752c: Pull complete 
f4cab7bcfad1: Pull complete 
b74896b5214f: Pull complete 
153df08ea6de: Pull complete 
Digest: sha256:73a60c961a8547a085bc9d19b69a1600adc7fce41edc8c6cc55df7ae23034fee
Status: Downloaded newer image for shivaram1918/netflix:latest
docker.io/shivaram1918/netflix:latest
root@ip-192-40-2-227:/home/ubuntu# docker service create --name Netflix --reserve-momery 100M --reserve-cpu .50 --limit-cpu 1 --limit-memory 300M --publish 3000:80 shivaram1918/netflix:latest
unknown flag: --reserve-momery

Usage:  docker service create [OPTIONS] IMAGE [COMMAND] [ARG...]

Run 'docker service create --help' for more information
root@ip-192-40-2-227:/home/ubuntu# docker service create --name Netflix --reserve-memory 100M --reserve-cpu .50 --limit-cpu 1 --limit-memory 300M --publish 3000:80 shivaram1918/netflix:latest
wtgbyrtuwb75r8898pqom38wa
overall progress: 1 out of 1 tasks 
1/1: running   [==================================================>] 
verify: Service wtgbyrtuwb75r8898pqom38wa converged 
root@ip-192-40-2-227:/home/ubuntu# docker service ls
ID             NAME      MODE         REPLICAS   IMAGE                         PORTS
wtgbyrtuwb75   Netflix   replicated   1/1        shivaram1918/netflix:latest   *:3000->80/tcp
root@ip-192-40-2-227:/home/ubuntu# docker service inspect Netflix
[
    {
        "ID": "wtgbyrtuwb75r8898pqom38wa",
        "Version": {
            "Index": 12
        },
        "CreatedAt": "2025-03-18T06:34:32.196836808Z",
        "UpdatedAt": "2025-03-18T06:34:32.199140406Z",
        "Spec": {
            "Name": "Netflix",
            "Labels": {},
            "TaskTemplate": {
                "ContainerSpec": {
                    "Image": "shivaram1918/netflix:latest@sha256:73a60c961a8547a085bc9d19b69a1600adc7fce41edc8c6cc55df7ae23034fee",
                    "Init": false,
                    "StopGracePeriod": 10000000000,
                    "DNSConfig": {},
                    "Isolation": "default"
                },
                "Resources": {
                    "Limits": {
                        "NanoCPUs": 1000000000,
                        "MemoryBytes": 314572800
                    },
                    "Reservations": {
                        "NanoCPUs": 500000000,
                        "MemoryBytes": 104857600
                    }
                },
                "RestartPolicy": {
                    "Condition": "any",
                    "Delay": 5000000000,
                    "MaxAttempts": 0
                },
                "Placement": {
                    "Platforms": [
                        {
                            "Architecture": "amd64",
                            "OS": "linux"
                        }
                    ]
                },
                "ForceUpdate": 0,
                "Runtime": "container"
            },
            "Mode": {
                "Replicated": {
                    "Replicas": 1
                }
            },
            "UpdateConfig": {
                "Parallelism": 1,
                "FailureAction": "pause",
                "Monitor": 5000000000,
                "MaxFailureRatio": 0,
                "Order": "stop-first"
            },
            "RollbackConfig": {
                "Parallelism": 1,
                "FailureAction": "pause",
                "Monitor": 5000000000,
                "MaxFailureRatio": 0,
                "Order": "stop-first"
            },
            "EndpointSpec": {
                "Mode": "vip",
                "Ports": [
                    {
                        "Protocol": "tcp",
                        "TargetPort": 80,
                        "PublishedPort": 3000,
                        "PublishMode": "ingress"
                    }
                ]
            }
        },
        "Endpoint": {
            "Spec": {
                "Mode": "vip",
                "Ports": [
                    {
                        "Protocol": "tcp",
                        "TargetPort": 80,
                        "PublishedPort": 3000,
                        "PublishMode": "ingress"
                    }
                ]
            },
            "Ports": [
                {
                    "Protocol": "tcp",
                    "TargetPort": 80,
                    "PublishedPort": 3000,
                    "PublishMode": "ingress"
                }
            ],
            "VirtualIPs": [
                {
                    "NetworkID": "451r533i03ltfyn115nc9nlb6",
                    "Addr": "10.0.0.3/24"
                }
            ]
        }
    }
]
root@ip-192-40-2-227:/home/ubuntu# docker service ls
ID             NAME      MODE         REPLICAS   IMAGE                         PORTS
wtgbyrtuwb75   Netflix   replicated   1/1        shivaram1918/netflix:latest   *:3000->80/tcp
root@ip-192-40-2-227:/home/ubuntu# docker service update --help
Usage:  docker service update [OPTIONS] SERVICE

Update a service
root@ip-192-40-2-227:/home/ubuntu# docker service update Netflix --limit-memory 500M
Netflix
overall progress: 1 out of 1 tasks 
1/1: running   [==================================================>] 
verify: Service Netflix converged 
root@ip-192-40-2-227:/home/ubuntu# docker service inspect Netflix
[
    {
        "ID": "wtgbyrtuwb75r8898pqom38wa",
        "Version": {
            "Index": 29
        },
        "CreatedAt": "2025-03-18T06:34:32.196836808Z",
        "UpdatedAt": "2025-03-18T06:38:27.948922251Z",
        "Spec": {
            "Name": "Netflix",
            "Labels": {},
            "TaskTemplate": {
                "ContainerSpec": {
                    "Image": "shivaram1918/netflix:latest@sha256:73a60c961a8547a085bc9d19b69a1600adc7fce41edc8c6cc55df7ae23034fee",
                    "Init": false,
                    "StopGracePeriod": 10000000000,
                    "DNSConfig": {},
                    "Isolation": "default"
                },
                "Resources": {
                    "Limits": {
                        "NanoCPUs": 1000000000,
                        "MemoryBytes": 524288000
                    },
                    "Reservations": {
                        "NanoCPUs": 500000000,
                        "MemoryBytes": 104857600
                    }
                },
                "RestartPolicy": {
                    "Condition": "any",
                    "Delay": 5000000000,
                    "MaxAttempts": 0
                },
                "Placement": {
                    "Platforms": [
                        {
                            "Architecture": "amd64",
                            "OS": "linux"
                        }
                    ]
                },
                "ForceUpdate": 0,
                "Runtime": "container"
            },
            "Mode": {
                "Replicated": {
                    "Replicas": 1
                }
            },
            "UpdateConfig": {
                "Parallelism": 1,
                "FailureAction": "pause",
                "Monitor": 5000000000,
                "MaxFailureRatio": 0,
                "Order": "stop-first"
            },
            "RollbackConfig": {
                "Parallelism": 1,
                "FailureAction": "pause",
                "Monitor": 5000000000,
                "MaxFailureRatio": 0,
                "Order": "stop-first"
            },
            "EndpointSpec": {
                "Mode": "vip",
                "Ports": [
                    {
                        "Protocol": "tcp",
                        "TargetPort": 80,
                        "PublishedPort": 3000,
                        "PublishMode": "ingress"
                    }
                ]
            }
        },
        "PreviousSpec": {
            "Name": "Netflix",
            "Labels": {},
            "TaskTemplate": {
                "ContainerSpec": {
                    "Image": "shivaram1918/netflix:latest@sha256:73a60c961a8547a085bc9d19b69a1600adc7fce41edc8c6cc55df7ae23034fee",
                    "Init": false,
                    "DNSConfig": {},
                    "Isolation": "default"
                },
                "Resources": {
                    "Limits": {
                        "NanoCPUs": 1000000000,
                        "MemoryBytes": 314572800
                    },
                    "Reservations": {
                        "NanoCPUs": 500000000,
                        "MemoryBytes": 104857600
                    }
                },
                "Placement": {
                    "Platforms": [
                        {
                            "Architecture": "amd64",
                            "OS": "linux"
                        }
                    ]
                },
                "ForceUpdate": 0,
                "Runtime": "container"
            },
            "Mode": {
                "Replicated": {
                    "Replicas": 1
                }
            },
            "EndpointSpec": {
                "Mode": "vip",
                "Ports": [
                    {
                        "Protocol": "tcp",
                        "TargetPort": 80,
                        "PublishedPort": 3000,
                        "PublishMode": "ingress"
                    }
                ]
            }
        },
        "Endpoint": {
            "Spec": {
                "Mode": "vip",
                "Ports": [
                    {
                        "Protocol": "tcp",
                        "TargetPort": 80,
                        "PublishedPort": 3000,
                        "PublishMode": "ingress"
                    }
                ]
            },
            "Ports": [
                {
                    "Protocol": "tcp",
                    "TargetPort": 80,
                    "PublishedPort": 3000,
                    "PublishMode": "ingress"
                }
            ],
            "VirtualIPs": [
                {
                    "NetworkID": "451r533i03ltfyn115nc9nlb6",
                    "Addr": "10.0.0.3/24"
                }
            ]
        },
        "UpdateStatus": {
            "State": "completed",
            "StartedAt": "2025-03-18T06:38:18.788485099Z",
            "CompletedAt": "2025-03-18T06:38:27.948907179Z",
            "Message": "update completed"
        }
    }
]
root@ip-192-40-2-227:/home/ubuntu# docker service update Netflix --limit-memory 500M
Netflix
overall progress: 1 out of 1 tasks 
1/1: running   [==================================================>] 
verify: Service Netflix converged 
root@ip-192-40-2-227:/home/ubuntu# docker service inspect Netflix
[
    {
        "ID": "wtgbyrtuwb75r8898pqom38wa",
        "Version": {
            "Index": 30
        },
        "CreatedAt": "2025-03-18T06:34:32.196836808Z",
        "UpdatedAt": "2025-03-18T06:41:01.237835594Z",
        "Spec": {
            "Name": "Netflix",
            "Labels": {},
            "TaskTemplate": {
                "ContainerSpec": {
                    "Image": "shivaram1918/netflix:latest@sha256:73a60c961a8547a085bc9d19b69a1600adc7fce41edc8c6cc55df7ae23034fee",
                    "Init": false,
                    "StopGracePeriod": 10000000000,
                    "DNSConfig": {},
                    "Isolation": "default"
                },
                "Resources": {
                    "Limits": {
                        "NanoCPUs": 1000000000,
                        "MemoryBytes": 524288000
                    },
                    "Reservations": {
                        "NanoCPUs": 500000000,
                        "MemoryBytes": 104857600
                    }
                },
                "RestartPolicy": {
                    "Condition": "any",
                    "Delay": 5000000000,
                    "MaxAttempts": 0
                },
                "Placement": {
                    "Platforms": [
                        {
                            "Architecture": "amd64",
                            "OS": "linux"
                        }
                    ]
                },
                "ForceUpdate": 0,
                "Runtime": "container"
            },
            "Mode": {
                "Replicated": {
                    "Replicas": 1
                }
            },
            "UpdateConfig": {
                "Parallelism": 1,
                "FailureAction": "pause",
                "Monitor": 5000000000,
                "MaxFailureRatio": 0,
                "Order": "stop-first"
            },
            "RollbackConfig": {
                "Parallelism": 1,
                "FailureAction": "pause",
                "Monitor": 5000000000,
                "MaxFailureRatio": 0,
                "Order": "stop-first"
            },
            "EndpointSpec": {
                "Mode": "vip",
                "Ports": [
                    {
                        "Protocol": "tcp",
                        "TargetPort": 80,
                        "PublishedPort": 3000,
                        "PublishMode": "ingress"
                    }
                ]
            }
        },
        "PreviousSpec": {
            "Name": "Netflix",
            "Labels": {},
            "TaskTemplate": {
                "ContainerSpec": {
                    "Image": "shivaram1918/netflix:latest@sha256:73a60c961a8547a085bc9d19b69a1600adc7fce41edc8c6cc55df7ae23034fee",
                    "Init": false,
                    "DNSConfig": {},
                    "Isolation": "default"
                },
                "Resources": {
                    "Limits": {
                        "NanoCPUs": 1000000000,
                        "MemoryBytes": 524288000
                    },
                    "Reservations": {
                        "NanoCPUs": 500000000,
                        "MemoryBytes": 104857600
                    }
                },
                "Placement": {
                    "Platforms": [
                        {
                            "Architecture": "amd64",
                            "OS": "linux"
                        }
                    ]
                },
                "ForceUpdate": 0,
                "Runtime": "container"
            },
            "Mode": {
                "Replicated": {
                    "Replicas": 1
                }
            },
            "EndpointSpec": {
                "Mode": "vip",
                "Ports": [
                    {
                        "Protocol": "tcp",
                        "TargetPort": 80,
                        "PublishedPort": 3000,
                        "PublishMode": "ingress"
                    }
                ]
            }
        },
        "Endpoint": {
            "Spec": {
                "Mode": "vip",
                "Ports": [
                    {
                        "Protocol": "tcp",
                        "TargetPort": 80,
                        "PublishedPort": 3000,
                        "PublishMode": "ingress"
                    }
                ]
            },
            "Ports": [
                {
                    "Protocol": "tcp",
                    "TargetPort": 80,
                    "PublishedPort": 3000,
                    "PublishMode": "ingress"
                }
            ],
            "VirtualIPs": [
                {
                    "NetworkID": "451r533i03ltfyn115nc9nlb6",
                    "Addr": "10.0.0.3/24"
                }
            ]
        }
    }
]
--------------------------------------------------------------------- docker swarm limit is add memory ----------------
  "Resources": {
                    "Limits": {
                        "NanoCPUs": 1000000000,
                        "MemoryBytes": 524288000
                    },
                    "Reservations": {
                        "NanoCPUs": 500000000,
                        "MemoryBytes": 10485760



----------------------------------------------------------- docker swarm config -----------------------

nano index.html
root@ip-192-40-2-227:/home/ubuntu# docker config create nginxindex index.html 
jhvst6dehzcf20g8drc1odqgb
root@ip-192-40-2-227:/home/ubuntu# nano index.html
root@ip-192-40-2-227:/home/ubuntu# docker config create nginxindex2 index.html 
lnns1ywhx00wp64vs4l3scv3a
root@ip-192-40-2-227:/home/ubuntu# nano index.html
root@ip-192-40-2-227:/home/ubuntu# docker config crteate nginxindex3 index.html
docker: unknown command: docker config crteate

Usage:  docker config

Run 'docker config --help' for more information
root@ip-192-40-2-227:/home/ubuntu# docker config create nginxindex3 index.html
ajf53nno5efbfqpl2cfgmqzq1
root@ip-192-40-2-227:/home/ubuntu# docker config 
Usage:  docker config COMMAND

Manage Swarm configs

Commands:
  create      Create a config from a file or STDIN
  inspect     Display detailed information on one or more configs
  ls          List configs
  rm          Remove one or more configs

Run 'docker config COMMAND --help' for more information on a command.
root@ip-192-40-2-227:/home/ubuntu# docker configs ls
docker: unknown command: docker configs

Run 'docker --help' for more information
root@ip-192-40-2-227:/home/ubuntu# docker config ls
ID                          NAME          CREATED              UPDATED
jhvst6dehzcf20g8drc1odqgb   nginxindex    2 minutes ago        2 minutes ago
lnns1ywhx00wp64vs4l3scv3a   nginxindex2   About a minute ago   About a minute ago
ajf53nno5efbfqpl2cfgmqzq1   nginxindex3   21 seconds ago       21 seconds ago
root@ip-192-40-2-227:/home/ubuntu# docker service ls
ID             NAME      MODE         REPLICAS   IMAGE                         PORTS
wtgbyrtuwb75   Netflix   replicated   1/1        shivaram1918/netflix:latest   *:3000->80/tcp
root@ip-192-40-2-227:/home/ubuntu# docker service rm Netflix 
Netflix
root@ip-192-40-2-227:/home/ubuntu# docker service ls
ID        NAME      MODE      REPLICAS   IMAGE     PORTS
root@ip-192-40-2-227:/home/ubuntu# docker service create --name nginx1 -publish 8000:80 shivaram1918/netflix:latest
invalid argument "ublish" for "-p, --publish" flag: invalid containerPort: ublish

Usage:  docker service create [OPTIONS] IMAGE [COMMAND] [ARG...]

Run 'docker service create --help' for more information
root@ip-192-40-2-227:/home/ubuntu# docker service create --name nginx1 --publish 8000:80 shivaram1918/netflix:latest
mukk8jay3tj4tkvl39jq9gpge
overall progress: 1 out of 1 tasks 
1/1: running   [==================================================>] 
verify: Service mukk8jay3tj4tkvl39jq9gpge converged 
root@ip-192-40-2-227:/home/ubuntu# docker service ls
ID             NAME      MODE         REPLICAS   IMAGE                         PORTS
mukk8jay3tj4   nginx1    replicated   1/1        shivaram1918/netflix:latest   *:8000->80/tcp
root@ip-192-40-2-227:/home/ubuntu# docker service create --name nginx2 --config src=nginxindex,target=/usr/share/nginx/html/index.html --publish 8100:80 shivaram1918/netflix:latest
gmucj2hfqpra62b24k7j6czqx
overall progress: 1 out of 1 tasks 
1/1: running   [==================================================>] 
verify: Service gmucj2hfqpra62b24k7j6czqx converged 
root@ip-192-40-2-227:/home/ubuntu# docker service ls
ID             NAME      MODE         REPLICAS   IMAGE                         PORTS
mukk8jay3tj4   nginx1    replicated   1/1        shivaram1918/netflix:latest   *:8000->80/tcp
gmucj2hfqpra   nginx2    replicated   1/1        shivaram1918/netflix:latest   *:8100->80/tcp


 ---------------------------------docker swarm update confug ---------------------------------------------------------

----------------------------config one is rm add config two same service same port --------------------------------------------------
root@ip-192-40-2-227:/home/ubuntu# docker service update --config-rm nginxindex --config-add src=nginxindex2,target=/usr/share/nginx/html/index.html nginx2
nginx2
overall progress: 1 out of 1 tasks 
1/1: running   [==================================================>] 
verify: Service nginx2 converged 
root@ip-192-40-2-227:/home/ubuntu# cat index.html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Welcome to NGINX!</title>
    <style>
        body { 
            font-family: Arial, sans-serif; 
            text-align: center; 
            margin: 50px;
        }
        h1 { color: #3498db; }
        p { color: #2c3e50; }
    </style>
</head>
<body>
    <h1>Welcome to NGINX!  Docker_Config_3</h1>
    <p>This is a sample HTML page served by NGINX.</p>
</body>
</html>
root@ip-192-40-2-227:/home/ubuntu# 

------------------  web application after changes    --------

Welcome to NGINX! Docker_Config_2
This is a sample HTML page served by NGINX.


------------------------- config 2 rm update config 1 ----------

# docker service ls
ID             NAME      MODE         REPLICAS   IMAGE                         PORTS
mukk8jay3tj4   nginx1    replicated   1/1        shivaram1918/netflix:latest   *:8000->80/tcp
gmucj2hfqpra   nginx2    replicated   1/1        shivaram1918/netflix:latest   *:8100->80/tcp
root@ip-192-40-2-227:/home/ubuntu# docker service nginx2 scale=3
docker: unknown command: docker service nginx2

Usage:  docker service

Run 'docker service --help' for more information
root@ip-192-40-2-227:/home/ubuntu# docker service  scale ngnix2=3
ngnix2: Error response from daemon: service ngnix2 not found
root@ip-192-40-2-227:/home/ubuntu# docker service  scale nginx2=3
nginx2 scaled to 3
overall progress: 3 out of 3 tasks 
1/3: running   [==================================================>] 
2/3: running   [==================================================>] 
3/3: running   [==================================================>] 
verify: Service nginx2 converged 
root@ip-192-40-2-227:/home/ubuntu# docker service ls
ID             NAME      MODE         REPLICAS   IMAGE                         PORTS
mukk8jay3tj4   nginx1    replicated   1/1        shivaram1918/netflix:latest   *:8000->80/tcp
gmucj2hfqpra   nginx2    replicated   3/3        shivaram1918/netflix:latest   *:8100->80/tcp
root@ip-192-40-2-227:/home/ubuntu# docker service update --config-rm nginxindex2 --config-add src=nginxindex,target=/usr/share/nginx/html/index.html nginx2
nginx2
overall progress: 3 out of 3 tasks 
1/3: running   [==================================================>] 
2/3: running   [==================================================>] 
3/3: running   [==================================================>] 
verify: Service nginx2 converged 
root@ip-192-40-2-227:/home/ubuntu# docker config inspect nginxindex2
[
    {
        "ID": "lnns1ywhx00wp64vs4l3scv3a",
        "Version": {
            "Index": 32
        },
        "CreatedAt": "2025-03-18T06:47:33.974859946Z",
        "UpdatedAt": "2025-03-18T06:47:33.974859946Z",
        "Spec": {
            "Name": "nginxindex2",
            "Labels": {},
            "Data": "PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KPGhlYWQ+CiAgICA8bWV0YSBjaGFyc2V0PSJVVEYtOCI+CiAgICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEuMCI+CiAgICA8dGl0bGU+V2VsY29tZSB0byBOR0lOWCE8L3RpdGxlPgogICAgPHN0eWxlPgogICAgICAgIGJvZHkgeyAKICAgICAgICAgICAgZm9udC1mYW1pbHk6IEFyaWFsLCBzYW5zLXNlcmlmOyAKICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOyAKICAgICAgICAgICAgbWFyZ2luOiA1MHB4OwogICAgICAgIH0KICAgICAgICBoMSB7IGNvbG9yOiAjMzQ5OGRiOyB9CiAgICAgICAgcCB7IGNvbG9yOiAjMmMzZTUwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ+Cjxib2R5PgogICAgPGgxPldlbGNvbWUgdG8gTkdJTlghICBEb2NrZXJfQ29uZmlnXzI8L2gxPgogICAgPHA+VGhpcyBpcyBhIHNhbXBsZSBIVE1MIHBhZ2Ugc2VydmVkIGJ5IE5HSU5YLjwvcD4KPC9ib2R5Pgo8L2h0bWw+Cg=="
        }
    }
]
root@ip-192-40-2-227:/home/ubuntu# docker config inspect nginxindex
[
    {
        "ID": "jhvst6dehzcf20g8drc1odqgb",
        "Version": {
            "Index": 31
        },
        "CreatedAt": "2025-03-18T06:46:39.893674165Z",
        "UpdatedAt": "2025-03-18T06:46:39.893674165Z",
        "Spec": {
            "Name": "nginxindex",
            "Labels": {},
            "Data": "PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KPGhlYWQ+CiAgICA8bWV0YSBjaGFyc2V0PSJVVEYtOCI+CiAgICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEuMCI+CiAgICA8dGl0bGU+V2VsY29tZSB0byBOR0lOWCE8L3RpdGxlPgogICAgPHN0eWxlPgogICAgICAgIGJvZHkgeyAKICAgICAgICAgICAgZm9udC1mYW1pbHk6IEFyaWFsLCBzYW5zLXNlcmlmOyAKICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOyAKICAgICAgICAgICAgbWFyZ2luOiA1MHB4OwogICAgICAgIH0KICAgICAgICBoMSB7IGNvbG9yOiAjMzQ5OGRiOyB9CiAgICAgICAgcCB7IGNvbG9yOiAjMmMzZTUwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ+Cjxib2R5PgogICAgPGgxPldlbGNvbWUgdG8gTkdJTlghICBEb2NrZXJfQ29uZmlnPC9oMT4KICAgIDxwPlRoaXMgaXMgYSBzYW1wbGUgSFRNTCBwYWdlIHNlcnZlZCBieSBOR0lOWC48L3A+CjwvYm9keT4KPC9odG1sPgo="
        }
    }
]


-------------------------------------docker swarm secret ----------------------------------


 docker secret ls
ID        NAME      DRIVER    CREATED   UPDATED
root@ip-192-40-2-227:/home/ubuntu# openssl rand -base64 12 
1nOCHSSTVmeETJoW
root@ip-192-40-2-227:/home/ubuntu# openssl rand -base64 12  | docker secret create db_root_password -
8etpzuaacr4zolk31ws1iqzui
root@ip-192-40-2-227:/home/ubuntu# openssl rand -base64 12  | docker secret create db_dba_password -
lkwj3iso3gtmygs99kf4jpv86
root@ip-192-40-2-227:/home/ubuntu# docker secret ls
ID                          NAME               DRIVER    CREATED          UPDATED
lkwj3iso3gtmygs99kf4jpv86   db_dba_password              8 seconds ago    8 seconds ago
8etpzuaacr4zolk31ws1iqzui   db_root_password             32 seconds ago   32 seconds ago
root@ip-192-40-2-227:/home/ubuntu# docker secrete inspect db_dba_password
docker: unknown command: docker secrete

Run 'docker --help' for more information
root@ip-192-40-2-227:/home/ubuntu# docker secret inspect db_dba_password
[
    {
        "ID": "lkwj3iso3gtmygs99kf4jpv86",
        "Version": {
            "Index": 106
        },
        "CreatedAt": "2025-03-18T07:35:54.306316612Z",
        "UpdatedAt": "2025-03-18T07:35:54.306316612Z",
        "Spec": {
            "Name": "db_dba_password",
            "Labels": {}
        }
    }
]
root@ip-192-40-2-227:/home/ubuntu# docker secret inspect db_root_password
[
    {
        "ID": "8etpzuaacr4zolk31ws1iqzui",
        "Version": {
            "Index": 105
        },
        "CreatedAt": "2025-03-18T07:35:30.436242545Z",
        "UpdatedAt": "2025-03-18T07:35:30.436242545Z",
        "Spec": {
            "Name": "db_root_password",
            "Labels": {}
        }
    }
]



--------------------

docker service ls
ID             NAME             MODE         REPLICAS   IMAGE                         PORTS
tb8ma4bcj3ym   secretchecking   replicated   1/1        shivaram1918/netflix:latest   *:8200->80/tcp
root@ip-192-40-2-227:/home/ubuntu# docker service rm secretchecking
secretchecking
root@ip-192-40-2-227:/home/ubuntu# docker service create --name secretchecking --secrete db_root_password --secret db_dba_password -p 8200:80 shivaram1918/netflix:latest
unknown flag: --secrete

Usage:  docker service create [OPTIONS] IMAGE [COMMAND] [ARG...]

Run 'docker service create --help' for more information
root@ip-192-40-2-227:/home/ubuntu# docker service create --name secretchecking --secret db_root_password --secret db_dba_password -p 8200:80 shivaram1918/netflix:latest
pvblbjs76a6plfham9firshs2
overall progress: 1 out of 1 tasks 
1/1: running   [==================================================>] 
verify: Service pvblbjs76a6plfham9firshs2 converged 
root@ip-192-40-2-227:/home/ubuntu# docker ps 
CONTAINER ID   IMAGE                         COMMAND                  CREATED          STATUS          PORTS     NAMES
963f41af73ce   shivaram1918/netflix:latest   "nginx -g 'daemon of…"   12 seconds ago   Up 11 seconds   80/tcp    secretchecking.1.7pd0tlbubjbqtyu0ev810ojxy
root@ip-192-40-2-227:/home/ubuntu# docker exec -it  963f41af73ce bash
OCI runtime exec failed: exec failed: unable to start container process: exec: "bash": executable file not found in $PATH: unknown
root@ip-192-40-2-227:/home/ubuntu# docker ps 
CONTAINER ID   IMAGE                         COMMAND                  CREATED              STATUS          PORTS     NAMES
963f41af73ce   shivaram1918/netflix:latest   "nginx -g 'daemon of…"   About a minute ago   Up 59 seconds   80/tcp    secretchecking.1.7pd0tlbubjbqtyu0ev810ojxy
root@ip-192-40-2-227:/home/ubuntu# docker exec -it 963f41af73ce sh 


/home/ubuntu# docker exec -it 963f41af73ce ash
/usr/share/nginx/html # ls
assets         avatar.png     favicon.ico    index.html     logo192.png    logo512.png    manifest.json  robots.txt
/usr/share/nginx/html # ls /run/secret/
ls: /run/secret/: No such file or directory
/usr/share/nginx/html # ls /run/secrets/
db_dba_password   db_root_password
/usr/share/nginx/html # cat  /run/secrets/db_dba_password/
cat: can't open '/run/secrets/db_dba_password/': Not a directory
/usr/share/nginx/html # cat  /run/secrets/db_dba_password
7hbryTfHIc/yT56H
/usr/share/nginx/html # cat  /run/secrets/db_root_password
sJUpmQZRNr5cdy3F
/usr/share/nginx/html # echo "The is Root password is $(cat  /run/secrets/db_root_password) and dba password is $(cat  /run/secrets/db_dba_passw)
> exit
> done
> 
> 
> q
> ^C

/usr/share/nginx/html # echo "The is Root password is $(cat  /run/secrets/db_root_password) and dba password is $(cat  /run/secrets/db_dba_passw)" .
cat: can't open '/run/secrets/db_dba_passw': No such file or directory
The is Root password is sJUpmQZRNr5cdy3F and dba password is  .
/usr/share/nginx/html # echo "The is Root password is $(cat  /run/secrets/db_root_password) and dba password is $(cat  /run/secrets/db_dba_password)" .
The is Root password is sJUpmQZRNr5cdy3F and dba password is 7hbryTfHIc/yT56H .
/usr/share/nginx/html # 
/usr/share/nginx/html # 
/usr/share/nginx/html # ROOTPASSWD=$(cat  /run/secrets/db_root_password)
/usr/share/nginx/html # DBPASSWD=$(cat  /run/secrets/db_dba_password)
/usr/share/nginx/html # echo $ROOTPASSWD
sJUpmQZRNr5cdy3F
/usr/share/nginx/html # echo $DBPASSWD
7hbryTfHIc/yT56H
[5:36 PM, 3/18/2025] Urukundu Anna Muk: docker_swarm_limit_config.txt
[5:39 PM, 3/18/2025] Urukundu Anna Muk: https://github.com/dockersamples/example-voting-app.git
[5:40 PM, 3/18/2025] Urukundu Anna Muk: https://github.com/dockersamples/docker-swarm-visualizer.git